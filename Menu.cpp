//############################################################################################################################################
#include "Menu.h"
//############################################################################################################################################

//############################################################################################################################################
Menu::Menu(){
	itens=0;
	pointer=0;
	pointerText.setString("->");
	pointerText.setAlinhamento(TEXTO_ALINHADO_A_ESQUERDA);
	pointerText.setAncora(0, 0);
	pointerText.setLarguraMaxima(0);
	mouseLastX = -99999;
	mouseLastY = -99999;
}
//############################################################################################################################################

//############################################################################################################################################
Menu::~Menu(){}
//############################################################################################################################################

//############################################################################################################################################
void Menu::setBackground(string sprite)
{
	background.setSpriteSheet(sprite);
}
//############################################################################################################################################

//############################################################################################################################################
void Menu::addItem(string item){
	if(itens<10){
		this->pointerText.setFonte("fonteArial"); //FONTE NÃO PODE SER SETADA NA INICIALIZAÇÃO PORQUE A FONTE AINDA NÃO FOI CARREGADA.
		soundClick.setAudio("somClick"); //FONTE NÃO PODE SER SETADO NA INICIALIZAÇÃO PORQUE O AUDIO AINDA NÃO FOI CARREGADO.
		this->item[itens].inicializar(item, (gJanela.getLargura()/12), (gJanela.getAltura()/12) + ((gJanela.getAltura()/12)*itens));
		itens++;
	}
}
//############################################################################################################################################

//############################################################################################################################################
void Menu::setItem(int item, string texto){
	this->item[item].setString(texto);
}
//############################################################################################################################################

//############################################################################################################################################
void Menu::setPointer(int pos)
{
	//LIMIT
	if(pos<0){ pos=0; }else if(pos>itens-1){ pos=itens-1; }

	//SET
	this->pointer=pos;
}
//############################################################################################################################################

//############################################################################################################################################
int Menu::getPointer()
{
	return this->pointer;
}
//############################################################################################################################################

//############################################################################################################################################
int Menu::run(){

	//###############################################
	// BACKGROUND
	//###############################################
	if(background.getSpriteSheet()){
		background.desenhar(gJanela.getLargura()/2, gJanela.getAltura()/2);   }
	//###############################################

	

	//###############################################
	// DRAW
	//###############################################
	for(int i=0; i<itens; i++){
		if(pointer==i){ pointerText.desenhar((gJanela.getLargura()/12)-pointerText.getLargura()-(gJanela.getLargura()/100), (gJanela.getAltura()/12) + ((gJanela.getAltura()/12)*i) + (gJanela.getAltura()/200)); }
		item[i].draw();
	}
	//###############################################
	


	//###############################################
	// CONTROL - KEYBOARD
	//###############################################
	//UP
	if(gTeclado.pressionou[TECLA_CIMA] && pointer>0){
		pointer--; }
	//DOWN
	else if(gTeclado.pressionou[TECLA_BAIXO] && pointer+1<itens){
		pointer++; }
	//BACK
	else if(gTeclado.pressionou[TECLA_ESC] || gTeclado.pressionou[TECLA_VOLTAR]){
		pointer=itens-1; }
	//###############################################



	//###############################################
	// CONTROL - MOUSE
	//###############################################
	for(int i=0; i<itens; i++){
		if(item[i].mouseOver()){
			//POINTED
			if(gMouse.x!=mouseLastX || gMouse.y!=mouseLastY){ 
				pointer=i; }
			
			//SELECTED
			if(gMouse.pressionou[BOTAO_MOUSE_ESQ]){
				pointer=i;
				extern bool optionAudio;
				if(optionAudio){ soundClick.tocar(); }
				return pointer;
			}
		}
	}
	mouseLastX = gMouse.x;
	mouseLastY = gMouse.y;
	//###############################################



	//###############################################
	// SELECTED - KEYBOARD
	//###############################################
	if(gTeclado.pressionou[TECLA_ENTER] || gTeclado.pressionou[TECLA_ENTER2] || gTeclado.pressionou[TECLA_ESPACO]){
		extern bool optionAudio;
		if(optionAudio){ soundClick.tocar(); }
		return pointer; }
	else{
		return -1; }
	//###############################################
}
//############################################################################################################################################

//############################################################################################################################################
void Menu::stop(){
	soundClick.parar();
}
//############################################################################################################################################




